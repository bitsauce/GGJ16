<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>view_wview = obj_main.display_width; view_hview = obj_main.display_height;
scale = view_wview;
view_xview = mean(obj_main.player_0.x, obj_main.player_1.x) - view_wview * 0.5;
view_yview = 0;

screenshake_x = 0;
screenshake_y = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var x_0 = obj_main.player_0.x, y_0 = obj_main.player_0.y, x_1 = obj_main.player_1.x, y_1 = obj_main.player_1.y;

if (instance_exists(obj_player) &amp;&amp; obj_main.in_menu == -1) {
    var target_scale = max(abs(x_1 - x_0) * 1.5, abs(y_1 - y_0) * 1.5);
    scale = scale + (target_scale - scale) * 0.07;
    
    view_wview = max(obj_main.display_width, round(scale));
    view_hview = max(obj_main.display_height, round(scale * (obj_main.display_height / obj_main.display_width)));
    
    var target_x = mean(x_0, x_1) - view_wview * 0.5, target_y = mean(y_0, y_1) - view_hview * 0.5;
    view_xview = round(view_xview + (target_x - view_xview) * 0.1);
    view_yview = round(view_yview + (target_y - view_yview) * 0.1);
}

view_xview += random_range(-screenshake_x, screenshake_x);
view_yview += random_range(-screenshake_y, screenshake_y);

if (screenshake_x &gt; 0) screenshake_x -= 0.2;
if (screenshake_y &gt; 0) screenshake_y -= 0.2;

view_xview[1] = view_xview;
view_yview[1] = view_yview;
view_wview[1] = view_wview;
view_hview[1] = view_hview;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
